/*
 * osrsbox-api
 *
 * An open, free, complete and up-to-date RESTful API for Old School RuneScape (OSRS) items, monsters and prayers.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ResponeLinksParent struct for ResponeLinksParent
type ResponeLinksParent struct {
	Title *string `json:"title,omitempty"`
	Href *string `json:"href,omitempty"`
}

// NewResponeLinksParent instantiates a new ResponeLinksParent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponeLinksParent() *ResponeLinksParent {
	this := ResponeLinksParent{}
	return &this
}

// NewResponeLinksParentWithDefaults instantiates a new ResponeLinksParent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponeLinksParentWithDefaults() *ResponeLinksParent {
	this := ResponeLinksParent{}
	return &this
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *ResponeLinksParent) GetTitle() string {
	if o == nil || o.Title == nil {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponeLinksParent) GetTitleOk() (*string, bool) {
	if o == nil || o.Title == nil {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *ResponeLinksParent) HasTitle() bool {
	if o != nil && o.Title != nil {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *ResponeLinksParent) SetTitle(v string) {
	o.Title = &v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *ResponeLinksParent) GetHref() string {
	if o == nil || o.Href == nil {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponeLinksParent) GetHrefOk() (*string, bool) {
	if o == nil || o.Href == nil {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *ResponeLinksParent) HasHref() bool {
	if o != nil && o.Href != nil {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *ResponeLinksParent) SetHref(v string) {
	o.Href = &v
}

func (o ResponeLinksParent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Title != nil {
		toSerialize["title"] = o.Title
	}
	if o.Href != nil {
		toSerialize["href"] = o.Href
	}
	return json.Marshal(toSerialize)
}

type NullableResponeLinksParent struct {
	value *ResponeLinksParent
	isSet bool
}

func (v NullableResponeLinksParent) Get() *ResponeLinksParent {
	return v.value
}

func (v *NullableResponeLinksParent) Set(val *ResponeLinksParent) {
	v.value = val
	v.isSet = true
}

func (v NullableResponeLinksParent) IsSet() bool {
	return v.isSet
}

func (v *NullableResponeLinksParent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponeLinksParent(val *ResponeLinksParent) *NullableResponeLinksParent {
	return &NullableResponeLinksParent{value: val, isSet: true}
}

func (v NullableResponeLinksParent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponeLinksParent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


